/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/visitors/{visitor_id}': {
    /** This endpoint allows you to get a history of visits with all available information. Use the visitorID as a URL path parameter. This API method is scoped to a visitor, i.e. all returned information is by visitorId. */
    get: {
      parameters: {
        path: {
          visitor_id: string;
        };
        query: {
          /** Filter events by requestId */
          request_id?: string;
          /** Filter events by custom identifier */
          linked_id?: string;
          /** Limit scanned results */
          limit?: number;
          /** Used to paginate results */
          before?: number;
        };
      };
      responses: {
        /** Auto generated using Swagger Inspector */
        200: {
          content: {
            'application/json': components['schemas']['Response'];
          };
        };
        429: {
          content: {
            'application/json': components['schemas']['ManyRequestsResponse'];
          };
        };
      };
    };
  };
  '/webhook': {
    /** Fake path to describe webhook format. More information about webhooks can be found in the [documentation](https://dev.fingerprint.com/docs/webhooks) */
    trace: {};
  };
}

export interface components {
  schemas: {
    Response: components['schemas']['BaseResponse'] | components['schemas']['PaginatedResponse'];
    /** BaseResponse */
    BaseResponse: {
      visitorId: string;
      visits: components['schemas']['Visit'][];
    };
    /**
     * PaginatedResponse
     * @description Fields `lastTimestamp` and `paginationKey` added when `limit` or `before` parameter provided and there is more data to show
     */
    PaginatedResponse: {
      visitorId: string;
      visits: components['schemas']['Visit'][];
      /**
       * Format: int64
       * @example 1654815517198
       */
      lastTimestamp: number;
      /** @example 1654815517198.azN4IZ */
      paginationKey: string;
    };
    ManyRequestsResponse: {
      /** @example request throttled */
      error: string;
    };
    WebhookVisit: {
      visitorId: string;
      clientReferrer?: string;
    } & components['schemas']['Visit'];
    /** Visit */
    Visit: {
      /** @example 1654815516083.OX6kx8 */
      requestId: string;
      browserDetails: components['schemas']['BrowserDetails'];
      incognito: boolean;
      /**
       * Format: ipv4
       * @example 8.8.8.8
       */
      ip: string;
      ipLocation: components['schemas']['IPLocation'];
      /**
       * Format: int64
       * @example 1654815516086
       */
      timestamp: number;
      /**
       * Format: date-time
       * @example 2022-06-09T22:58:36Z
       */
      time: string;
      /**
       * Format: uri
       * @example https://some.website/path?query=params
       */
      url: string;
      tag: { [key: string]: unknown };
      /** @example someID */
      linkedId?: string;
      confidence: components['schemas']['Confidence'];
      visitorFound: boolean;
      /**
       * @example {
       *   "global": "2022-05-05T18:28:54.535Z",
       *   "subscription": "2022-06-09T22:58:05.576Z"
       * }
       */
      firstSeenAt: components['schemas']['StSeenAt'];
      /**
       * @example {
       *   "global": "2022-06-09T22:58:35.795Z",
       *   "subscription": null
       * }
       */
      lastSeenAt: components['schemas']['StSeenAt'];
    };
    /** BrowserDetails */
    BrowserDetails: {
      /** @example Chrome */
      browserName: string;
      /** @example 101 */
      browserMajorVersion: string;
      /** @example 101.0.4951 */
      browserFullVersion: string;
      /** @example Windows */
      os: string;
      /** @example 10 */
      osVersion: string;
      /** @example Other */
      device: string;
      /** @example Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36 */
      userAgent: string;
      botProbability?: number;
    };
    /** Confidence */
    Confidence: {
      /** Format: float */
      score: number;
    };
    /** StSeenAt */
    StSeenAt: {
      /** Format: date-time */
      global: string;
      /** Format: date-time */
      subscription: string | null;
    };
    /** IPLocation */
    IPLocation: {
      /** @example 1000 */
      accuracyRadius: number;
      /**
       * Format: double
       * @example 37.75
       */
      latitude: number;
      /**
       * Format: double
       * @example -97.82
       */
      longitude: number;
      /** @example 130 00 */
      postalCode?: string;
      /**
       * Format: timezone
       * @example America/Chicago
       */
      timezone: string;
      city?: {
        /** @example Prague */
        name?: string;
      };
      /**
       * @example {
       *   "code": "US",
       *   "name": "United States"
       * }
       */
      country: components['schemas']['Location'];
      /**
       * @example {
       *   "code": "NA",
       *   "name": "North America"
       * }
       */
      continent: components['schemas']['Location'];
      subdivisions?: components['schemas']['Subdivision'][];
    };
    /** Continent */
    Location: {
      /** @example US */
      code: string;
      /** @example United States */
      name: string;
    };
    Subdivision: {
      /** @example 10 */
      isoCode?: string;
      /** @example Hlavni mesto Praha */
      name?: string;
    };
  };
}

export interface operations {}

export interface external {}
